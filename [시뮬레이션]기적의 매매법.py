# -*- coding: utf-8 -*-
"""2-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RsyII7dd1IY_l3axxP28N3MA9BCh-hZy
"""

def Bnp(money, daily):
  cnt = 0
  for price in daily:
    if price <= money:# 전량 매수
      cnt += money // price
      money %= price
  return money + cnt*daily[13]

def Timing(money, daily):
  cnt = 0
  for i in range(len(daily) - 3):
    if daily[i] < daily[i+1] < daily[i+2]: # 3일 연속 상승하면 전량 매도
      money = money + cnt * daily[i+3]
      cnt = 0
    if daily[i] > daily[i+1] > daily[i+2]: # 3일 연속 하락하면 전량 매수
      cnt += money // daily[i+3]
      money %= daily[i+3]
  return money + cnt*daily[13]

money = int(input())
daily = list(map(int, input().split()))

Bnp_result = Bnp(money, daily) # BNP 방식의 결과
Timing_result = Timing(money, daily)# Timing 방식의 결과

if Bnp_result > Timing_result:
  print("BNP")
elif Bnp_result == Timing_result:
  print("SAMESAME")
else:
  print("TIMING")

def Bnp(money, daily):
    cnt = 0
    for price in daily:
        if price <= money:
            cnt += money // price
            money %= price
    return money + cnt * daily[-1]

def Timing(money, daily):
    cnt = 0
    for i in range(len(daily) - 3):
        if daily[i] < daily[i+1] < daily[i+2]:  # 3일 연속 상승
            money += cnt * daily[i+3]
            cnt = 0
        elif daily[i] > daily[i+1] > daily[i+2]:  # 3일 연속 하락
            cnt += money // daily[i+3]
            money %= daily[i+3]
    return money + cnt * daily[-1]

money = int(input())
daily = list(map(int, input().split()))

bnp_result = Bnp(money, daily)
timing_result = Timing(money, daily)
print(bnp_result, timing_result)

if bnp_result > timing_result:
    print("BNP")
elif bnp_result == timing_result:
    print("SAMESAME")
else:
    print("TIMING")
